\documentclass[a4paper]{article}

\usepackage[english]{babel}
\usepackage[utf8x]{inputenc}
\usepackage{enumitem}
\usepackage{amsmath}
\usepackage{graphicx}
\usepackage[colorinlistoftodos]{todonotes}

\title{User Manual}
\author{Yong Li}

\begin{document}
\maketitle

\section{Introduction}

The GUI consists primarily of 3 parts, which is \textbf{\textit{Diffusion Pre-processing}}, \textbf{\textit{T2 Pre-processing}} and \textbf{\textit{Cortical Analysis}}.
\\*
\\
Feel free to email \textbf{yong.loh12@imperial.ac.uk} if you found any bugs!

\section{Setting Up The GUI}

Copy and paste the whole \emph{GUITesting} folder in any directory. Open up a terminal, and hover to the directory containing the folder by using the \textbf{cd} command (Using the \textbf{pwd} command you should see something like: /staff/yl13/GUITesting) and run the command:
\begin{center}
chmod 777 -R GUITest/
\end{center}
to make every file runnable. This step is only required to be done exactly \textbf{once} when first using the GUI.

\section{Running The GUI}

Run the GUI by double clicking the \emph{RUNME} file and click Run.
\subsection{Creating a shortcut for the GUI}
Alternatively, drag the \emph{RUNME} file to the top panel of any GNOME-classic interface(using the mouse) and this will create a shortcut at the top of the panel. Run the GUI by clicking the icon you just created and this will run the GUI. 
\\*
\\
If this doesn't work, you can manually create a desktop shortcut by using the following steps:
\begin{enumerate}
	\item In the Desktop create an "Untitled Document". Just right click in 	the Desktop and select Create New Document. 
    \item Edit the file with Gedit and add the following lines: 
    \\*
    \textbf{[Desktop Entry]}
	\\*
    \textbf{Type=Application}
    \item Save the file and THEN rename it to whatever you want but at the end of the name add .desktop. For example, the name could be gui.desktop.

\item Now you should be able to right click the file and click \textbf{Properties}. In the command tab, type in the full path to \emph{RUNME}, for example /staff/yl13/GUITesting/GUITest/RUNME, and remember to set \textbf{Permissions} as executable! 

\end{enumerate}


\subsection{If GUI Doesn't Run}
If \emph{RUNME} doesn't run at all, i.e. if nothing pops up after clicking Run, then please open terminal and type in the following command:
\begin{center}
java -version
\end{center}
If the output is:
\begin{center}
java version ``1.6.0\_27" 
\end{center}
or anything less than 1.7, the java version must be updated to version 1.7.
An easy way is to open \textbf{Ubuntu Software Centre} and search for java in the search tab, then install OpenJDK 1.7. After installing, try typing the command ``java -version" again and if the output is still the same version, then type in these two commands(starting with \$):
\begin{itemize}[label={}]
	\item \$update-java-alternatives -l
   	\item \mbox{ } java-1.6.0-openjdk 1061 /usr/lib/jvm/java-1.6.0-openjdk
	\item \mbox{ } java-1.7.0-openjdk-amd64 1051 /usr/lib/jvm/java-1.7.0-openjdk-amd64
    \item \$sudo update-java-alternatives -s java-1.7.0-openjdk-amd64
\end{itemize}
Ignore the errors and typing ``java-version" should now be the updated one.

\section{Before Using the GUI}
\subsection{Suggested Input Format}
Since all 3 pipelines output files in the same directory as the input file, it is highly recommended(almost a must to prevent error) to use a seperate folder for each image file to process. An example would be instead of having all 4 images files in same directory, such as:
\begin{enumerate}
\item /staff/yl13/Testing/Data1.nii.gz
\item /staff/yl13/Testing/Data2.nii.gz
\item /staff/yl13/Testing/Data3.nii.gz
\item /staff/yl13/Testing/Data4.nii.gz
\end{enumerate}
It is highly recommended to change the above format to something like:
\begin{enumerate}
\item /staff/yl13/Testing/Data1/Data1.nii.gz
\item /staff/yl13/Testing/Data2/Data2.nii.gz
\item /staff/yl13/Testing/Data3/Data3.nii.gz
\item /staff/yl13/Testing/Data4/Data4.nii.gz
\end{enumerate}
in which all image files are in their individual unique folder, yet in the same parent folder, which is /staff/yl13/Testing. This will ease the process to locate all the image files and outputting the files to their correct folder. Extra input prerequisites is mentioned in the beginning of the following sections.
\\*
\\
**Important Note: All inputs must be in .nii or .nii.gz extensions, other extensions will cause the process not being able to run.

\section{The Main Frame}

If \emph{RUNME} successfully runs, you should be able to see a small frame appearing at top left corner specifying all 3 parts of pipeline mentioned earlier, which is \textbf{\textit{Diffusion Pre-processing}}, \textbf{\textit{T2 Pre-processing}}, \textbf{\textit{Cortical Analysis}} and a \textbf{\textit{Exit}} button. All 3 process uses a very similar interface with very minor changes, which all of them have both a \emph{Auto} and \emph{Manual} view.

\subsection{Diffusion Pre-processing}

As mentioned, there are two views for this process, which will be explained below.
\\*
\\
**Important Note: Every input must have at least one \textbf{\textit{*bvecs*}} or \textbf{\textit{*bval*}} present in the folder containing the image file, in which * means matches everything. For example:
\\*
\\
Input data to process is: /staff/yl13/Testing/NNU123/unreg-data.nii.gz.
\\
Please check that inside the folder /staff/yl13/Testing/NNU123/, it must contains both bvecs and bval.
\\*
\\
**Please check input data and ensure that volumes is equal to the number of bvec or bval entries, i.e. no trace image.

\subsubsection{Diffusion Pre-processing(Auto)}
By clicking Diffusion Pre-processing from the Main Frame, another frame which are titled as ``Diffusion Pre-processing(Auto)" would open up. In \emph{Auto} view, you just have to specify the parent folder. For example, if images to process are
\begin{enumerate}
\item /staff/yl13/Testing/NNU123/unreg-data.nii.gz
\item /staff/yl13/Testing/NNU456/unreg-data.nii.gz
\item /staff/yl13/Testing/NNU789/unreg-data.nii.gz
\item/staff/yl13/Testing/NNU1000/unreg-data.nii.gz
\end{enumerate}
Steps required are as follows:
\\*
\\
First specify /staff/yl13/Testing in input directory by using the \textbf{Open} Button. 
Next type unreg-data.nii.gz(The default is unreg-data.*) in the text field besides \textbf{File name to search(1)} and hit next. This will proceed to the Diffusion Pre-processing(Manual) frame with all inputs populated(The next step will be continued at \textbf{Diffusion Pre-processing Manual} section marked \$\$).
\\*
\\
**Note: You can add more files name to search by using the \textbf{Add more files to search} button, and note that * matches everything, e.g. unreg-data.* will work for the example above as well.
\\*
\\
Alternatively, you can also use the \textbf{Switch View to Manual} button to manually select the image files.

\subsubsection{Diffusion Pre-processing(Manual)}

In this view, you'll have to manually specify all image files by using the \textbf{Open} button. For example, if images to process are the same as above, steps required are as follows:
\\*
\\
First increase the number of datasets by dragging the \textbf{slider} besides the label \textbf{Number of datasets} to 4 and hit the \textbf{Go} button besides it. This will increase the available inputs to 4(instead of 1). 
Next specify the full path to the image files using the \textbf{Open} button. The final result should look like:
\begin{itemize}[label={}]
  \item Number of datasets : 4
  \item Input data 1: /staff/yl13/Testing/NNU123/unreg-data.nii.gz
  \item Input data 2: /staff/yl13/Testing/NNu456/unreg-data.nii.gz
  \item Input data 3: /staff/yl13/Testing/NNU789/unreg-data.nii.gz
  \item Input data 4: /staff/yl13/Testing/NNU1000/unreg-data.nii.gz
\end{itemize}
\$\$ If you used the \textbf{Diffusion Pre-processing(Auto)} and followed the steps in the previous section, you should reach the same stage as using the manual up until this point. The next steps is to determine whether to run \textbf{bedpostx} and \textbf{eddy\_correct} by using the check box. Finally, to run the process, simply hit the \textbf{Go} button and the process should start. Additional buttons such as \textbf{Switch View to Auto} allows you to go back to the \emph{Auto} view, while the \textbf{Clear} button clears all entries typed in the inputs. Additionally, you can specify how many process to run in parallel by typing the number in the textfield besides the \textbf{Number of Concurrent Process} label.

\subsection{T2 Pre-processing}
There are also two views for this process, which will be explained below.
\subsubsection{T2 Pre-processing(Auto)}
The steps required here is very similar to the \textbf{\textit{Diffusion Pre-processing(Auto)}}, please refer to the section above for more details. Some noticeable changes are the additional \textbf{Age file}. Using any text editor(such as gedit), create a text file that contains the age at scan corresponding to the input files. For example, if the images to process are:
\begin{enumerate}
	\item /staff/yl13/Testing/NNU123/NNU123\_T2.nii.gz
	\item /staff/yl13/Testing/NNU456/NNU456\_T2.nii.gz
	\item /staff/yl13/Testing/NNU789/NNU789\_T2.nii.gz
	\item /staff/yl13/Testing/NNU1000/NNU1000\_T2.nii.gz
\end{enumerate}
simply create a text file that looks like this:
\\*
\\
\hspace*{10 mm} 28
\\
\hspace*{10 mm}  33
\\
\hspace*{10 mm}  40
\\
\hspace*{10 mm} 44
\\*
\\
in which the subject NNU123 is scanned at age 28, etc. The format is type in 28 and hit \emph{Enter} and continue with 33, and hit \emph{Enter}, etc. The order of the age should match the same way as how the system sort the files. After saving the file, back in the GUI, specify the full path to the age file using the \textbf{Open} button besides it.
\\*
\\
**Important Note: Age text file can be left blank and it will populate all inputs to age of 36(by default), in which you can still manually change it in the \emph{Manual} view after hitting the \textbf{Next} button.

\subsubsection{T2 Pre-processing(Manual)}

This view will be of a very familiar sight if you used \textbf{\textit{Diffusion Pre-processing(Manual)}}, with an exception of an extra field for each input, which is the \textbf{Age at scan(weeks)}. There will also be a check box for running \textbf{parcellation and segmentation}. There's also a button \textbf{Run Segmentation Only} which is a convenient way if you've completed the T2 Pre-processing(without checking the \textbf{parcellation and segmentation} box) and decides to run segmentations only. This will avoid repeating the same process. For more details about the other parts, simply refer to the \textbf{\textit{Diffusion Pre-processing(Manual)}} section.

\subsection{Cortical Analysis}

This pipeline uses exactly the same interface as \textbf{\textit{T2 Pre-processing}} but is a continuation of the previous process. In the \emph{Manual} view, you will need to specify a \textbf{Template\_age} as well. 
\\*
\\
For this pipeline, there is a few important input prerequisites that must be followed:

\begin{enumerate}
	\item \textbf{\textit{T2 Pre-processing}} must be done beforehand with all the outputs in the same folder as the input.
    \item If \textbf{Diffusion Space} is checked, \textbf{\textit{Diffusion Pre-processing}} is expected to be finished and the ouput must be inside the same folder as the input as well.
\end{enumerate}
An example would be:
\\*
Input data 1: /staff/yl13/Testing/NNU123/filename.nii.gz. 
\\*
So in the folder /staff/yl13/Testing/NNU123, it should contains(assuming \textbf{Diffusion Space} is checked):
\begin{enumerate}
	\item /staff/yl13/Testing/NNU123/segmentations, which contains all 3 expected output after running segmentation, and other files outputted from \textbf{\textit{T2 Pre-Processing}}.
    \item /staff/yl13/Testing/NNU123/dti\_FA.nii.gz, other dti files,
    \\*
    /staff/yl13/Testing/NNU123/nodif\_brain.nii.gz, and other files outputted from \textbf{\textit{Diffusion Pre-processing}}
\end{enumerate}


\end{document}

